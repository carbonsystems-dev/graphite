interface Graphite{set:(e:string,t:any)=>void;get:(e:string,t?:(e:any)=>void)=>void;push:(e:string,...t:any[])=>any[]|null;pull:(e:string,...t:any[])=>any[]|null;has:(e:string,t:any)=>boolean;delete:(e:string)=>any;add:(e:string,t:number)=>number|null;sub:(e:string,t:number)=>number|null}const Graphite:Graphite={set:function(e,t){localStorage.setItem(e,JSON.stringify(t));const n=new CustomEvent("GraphiteStorageEvent",{detail:{key:e,value:t}});window.dispatchEvent(n)},get:function(e,t){const n=JSON.parse(localStorage.getItem(e));t&&t(n)},push:function(e,...t){const n=this.get(e);if(Array.isArray(n)){n.push(...t),this.set(e,n);return n}return null},pull:function(e,...t){const n=this.get(e);if(Array.isArray(n)){const r=n.filter(e=>!t.includes(e));return this.set(e,r),r}return null},has:function(e,t){const n=this.get(e);return Array.isArray(n)&&n.includes(t)},delete:function(e){const t=this.get(e);return localStorage.removeItem(e),t},add:function(e,t){const n=this.get(e);return typeof n==="number"?(this.set(e,n+t),n+t):null},sub:function(e,t){const n=this.get(e);return typeof n==="number"?(this.set(e,n-t),n-t):null}};window.addEventListener("GraphiteStorageEvent",function(e){const{key:t,value:n}=e.detail;localStorage.setItem(t,JSON.stringify(n))}),window.Graphite=Graphite;
